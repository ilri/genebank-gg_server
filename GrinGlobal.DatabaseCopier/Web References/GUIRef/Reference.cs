//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.17929.
// 
#pragma warning disable 1591

namespace GrinGlobal.DatabaseCopier.GUIRef {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="GUISoap", Namespace="http://tempuri.org/")]
    public partial class GUI : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback DeleteDataViewDefinitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataViewDefinitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateDataViewDefinitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataViaDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataParameterTemplateOperationCompleted;
        
        private System.Threading.SendOrPostCallback ClearCacheOperationCompleted;
        
        private System.Threading.SendOrPostCallback ToGuidOperationCompleted;
        
        private System.Threading.SendOrPostCallback LogUsageOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListSearchIndexesOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangePasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback RenameListOperationCompleted;
        
        private System.Threading.SendOrPostCallback RenameTabOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangeLanguageOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteListOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveDataSetOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public GUI() {
            this.Url = global::GrinGlobal.DatabaseCopier.Properties.Settings.Default.GrinGlobal_DatabaseCopier_GUIRef_GUI;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event DeleteDataViewDefinitionCompletedEventHandler DeleteDataViewDefinitionCompleted;
        
        /// <remarks/>
        public event GetDataViewDefinitionCompletedEventHandler GetDataViewDefinitionCompleted;
        
        /// <remarks/>
        public event CreateDataViewDefinitionCompletedEventHandler CreateDataViewDefinitionCompleted;
        
        /// <remarks/>
        public event GetDataCompletedEventHandler GetDataCompleted;
        
        /// <remarks/>
        public event GetDataViaDataSetCompletedEventHandler GetDataViaDataSetCompleted;
        
        /// <remarks/>
        public event GetDataParameterTemplateCompletedEventHandler GetDataParameterTemplateCompleted;
        
        /// <remarks/>
        public event ClearCacheCompletedEventHandler ClearCacheCompleted;
        
        /// <remarks/>
        public event ToGuidCompletedEventHandler ToGuidCompleted;
        
        /// <remarks/>
        public event LogUsageCompletedEventHandler LogUsageCompleted;
        
        /// <remarks/>
        public event SearchCompletedEventHandler SearchCompleted;
        
        /// <remarks/>
        public event ListSearchIndexesCompletedEventHandler ListSearchIndexesCompleted;
        
        /// <remarks/>
        public event CreateUserCompletedEventHandler CreateUserCompleted;
        
        /// <remarks/>
        public event ValidateLoginCompletedEventHandler ValidateLoginCompleted;
        
        /// <remarks/>
        public event ChangePasswordCompletedEventHandler ChangePasswordCompleted;
        
        /// <remarks/>
        public event RenameListCompletedEventHandler RenameListCompleted;
        
        /// <remarks/>
        public event RenameTabCompletedEventHandler RenameTabCompleted;
        
        /// <remarks/>
        public event ChangeLanguageCompletedEventHandler ChangeLanguageCompleted;
        
        /// <remarks/>
        public event GetVersionCompletedEventHandler GetVersionCompleted;
        
        /// <remarks/>
        public event DeleteListCompletedEventHandler DeleteListCompleted;
        
        /// <remarks/>
        public event TestLogCompletedEventHandler TestLogCompleted;
        
        /// <remarks/>
        public event SaveDataSetCompletedEventHandler SaveDataSetCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteDataViewDefinition", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet DeleteDataViewDefinition(bool suppressExceptions, string userName, string password, string dataviewName) {
            object[] results = this.Invoke("DeleteDataViewDefinition", new object[] {
                        suppressExceptions,
                        userName,
                        password,
                        dataviewName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteDataViewDefinitionAsync(bool suppressExceptions, string userName, string password, string dataviewName) {
            this.DeleteDataViewDefinitionAsync(suppressExceptions, userName, password, dataviewName, null);
        }
        
        /// <remarks/>
        public void DeleteDataViewDefinitionAsync(bool suppressExceptions, string userName, string password, string dataviewName, object userState) {
            if ((this.DeleteDataViewDefinitionOperationCompleted == null)) {
                this.DeleteDataViewDefinitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteDataViewDefinitionOperationCompleted);
            }
            this.InvokeAsync("DeleteDataViewDefinition", new object[] {
                        suppressExceptions,
                        userName,
                        password,
                        dataviewName}, this.DeleteDataViewDefinitionOperationCompleted, userState);
        }
        
        private void OnDeleteDataViewDefinitionOperationCompleted(object arg) {
            if ((this.DeleteDataViewDefinitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteDataViewDefinitionCompleted(this, new DeleteDataViewDefinitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDataViewDefinition", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDataViewDefinition(bool suppressExceptions, string userName, string password, string dataviewName) {
            object[] results = this.Invoke("GetDataViewDefinition", new object[] {
                        suppressExceptions,
                        userName,
                        password,
                        dataviewName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataViewDefinitionAsync(bool suppressExceptions, string userName, string password, string dataviewName) {
            this.GetDataViewDefinitionAsync(suppressExceptions, userName, password, dataviewName, null);
        }
        
        /// <remarks/>
        public void GetDataViewDefinitionAsync(bool suppressExceptions, string userName, string password, string dataviewName, object userState) {
            if ((this.GetDataViewDefinitionOperationCompleted == null)) {
                this.GetDataViewDefinitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataViewDefinitionOperationCompleted);
            }
            this.InvokeAsync("GetDataViewDefinition", new object[] {
                        suppressExceptions,
                        userName,
                        password,
                        dataviewName}, this.GetDataViewDefinitionOperationCompleted, userState);
        }
        
        private void OnGetDataViewDefinitionOperationCompleted(object arg) {
            if ((this.GetDataViewDefinitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataViewDefinitionCompleted(this, new GetDataViewDefinitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateDataViewDefinition", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet CreateDataViewDefinition(bool suppressExceptions, string userName, string password, string dataviewName, string sql, string description, bool readOnly, bool suppressProps, bool userVisible, System.Data.DataSet dsInfo) {
            object[] results = this.Invoke("CreateDataViewDefinition", new object[] {
                        suppressExceptions,
                        userName,
                        password,
                        dataviewName,
                        sql,
                        description,
                        readOnly,
                        suppressProps,
                        userVisible,
                        dsInfo});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void CreateDataViewDefinitionAsync(bool suppressExceptions, string userName, string password, string dataviewName, string sql, string description, bool readOnly, bool suppressProps, bool userVisible, System.Data.DataSet dsInfo) {
            this.CreateDataViewDefinitionAsync(suppressExceptions, userName, password, dataviewName, sql, description, readOnly, suppressProps, userVisible, dsInfo, null);
        }
        
        /// <remarks/>
        public void CreateDataViewDefinitionAsync(bool suppressExceptions, string userName, string password, string dataviewName, string sql, string description, bool readOnly, bool suppressProps, bool userVisible, System.Data.DataSet dsInfo, object userState) {
            if ((this.CreateDataViewDefinitionOperationCompleted == null)) {
                this.CreateDataViewDefinitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateDataViewDefinitionOperationCompleted);
            }
            this.InvokeAsync("CreateDataViewDefinition", new object[] {
                        suppressExceptions,
                        userName,
                        password,
                        dataviewName,
                        sql,
                        description,
                        readOnly,
                        suppressProps,
                        userVisible,
                        dsInfo}, this.CreateDataViewDefinitionOperationCompleted, userState);
        }
        
        private void OnCreateDataViewDefinitionOperationCompleted(object arg) {
            if ((this.CreateDataViewDefinitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateDataViewDefinitionCompleted(this, new CreateDataViewDefinitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetData(bool suppressExceptions, string userName, string password, string dataviewNameOrSql, string delimitedParameterList, int offset, int limit) {
            object[] results = this.Invoke("GetData", new object[] {
                        suppressExceptions,
                        userName,
                        password,
                        dataviewNameOrSql,
                        delimitedParameterList,
                        offset,
                        limit});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataAsync(bool suppressExceptions, string userName, string password, string dataviewNameOrSql, string delimitedParameterList, int offset, int limit) {
            this.GetDataAsync(suppressExceptions, userName, password, dataviewNameOrSql, delimitedParameterList, offset, limit, null);
        }
        
        /// <remarks/>
        public void GetDataAsync(bool suppressExceptions, string userName, string password, string dataviewNameOrSql, string delimitedParameterList, int offset, int limit, object userState) {
            if ((this.GetDataOperationCompleted == null)) {
                this.GetDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataOperationCompleted);
            }
            this.InvokeAsync("GetData", new object[] {
                        suppressExceptions,
                        userName,
                        password,
                        dataviewNameOrSql,
                        delimitedParameterList,
                        offset,
                        limit}, this.GetDataOperationCompleted, userState);
        }
        
        private void OnGetDataOperationCompleted(object arg) {
            if ((this.GetDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataCompleted(this, new GetDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDataViaDataSet", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDataViaDataSet(bool suppressExceptions, string userName, string password, string dataviewNameOrSql, System.Data.DataSet parameterList, int offset, int limit) {
            object[] results = this.Invoke("GetDataViaDataSet", new object[] {
                        suppressExceptions,
                        userName,
                        password,
                        dataviewNameOrSql,
                        parameterList,
                        offset,
                        limit});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataViaDataSetAsync(bool suppressExceptions, string userName, string password, string dataviewNameOrSql, System.Data.DataSet parameterList, int offset, int limit) {
            this.GetDataViaDataSetAsync(suppressExceptions, userName, password, dataviewNameOrSql, parameterList, offset, limit, null);
        }
        
        /// <remarks/>
        public void GetDataViaDataSetAsync(bool suppressExceptions, string userName, string password, string dataviewNameOrSql, System.Data.DataSet parameterList, int offset, int limit, object userState) {
            if ((this.GetDataViaDataSetOperationCompleted == null)) {
                this.GetDataViaDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataViaDataSetOperationCompleted);
            }
            this.InvokeAsync("GetDataViaDataSet", new object[] {
                        suppressExceptions,
                        userName,
                        password,
                        dataviewNameOrSql,
                        parameterList,
                        offset,
                        limit}, this.GetDataViaDataSetOperationCompleted, userState);
        }
        
        private void OnGetDataViaDataSetOperationCompleted(object arg) {
            if ((this.GetDataViaDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataViaDataSetCompleted(this, new GetDataViaDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDataParameterTemplate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDataParameterTemplate(bool suppressExceptions, string userName, string password, string dataviewName) {
            object[] results = this.Invoke("GetDataParameterTemplate", new object[] {
                        suppressExceptions,
                        userName,
                        password,
                        dataviewName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataParameterTemplateAsync(bool suppressExceptions, string userName, string password, string dataviewName) {
            this.GetDataParameterTemplateAsync(suppressExceptions, userName, password, dataviewName, null);
        }
        
        /// <remarks/>
        public void GetDataParameterTemplateAsync(bool suppressExceptions, string userName, string password, string dataviewName, object userState) {
            if ((this.GetDataParameterTemplateOperationCompleted == null)) {
                this.GetDataParameterTemplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataParameterTemplateOperationCompleted);
            }
            this.InvokeAsync("GetDataParameterTemplate", new object[] {
                        suppressExceptions,
                        userName,
                        password,
                        dataviewName}, this.GetDataParameterTemplateOperationCompleted, userState);
        }
        
        private void OnGetDataParameterTemplateOperationCompleted(object arg) {
            if ((this.GetDataParameterTemplateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataParameterTemplateCompleted(this, new GetDataParameterTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ClearCache", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ClearCache(bool suppressExceptions, string userName, string password, string cacheName) {
            object[] results = this.Invoke("ClearCache", new object[] {
                        suppressExceptions,
                        userName,
                        password,
                        cacheName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ClearCacheAsync(bool suppressExceptions, string userName, string password, string cacheName) {
            this.ClearCacheAsync(suppressExceptions, userName, password, cacheName, null);
        }
        
        /// <remarks/>
        public void ClearCacheAsync(bool suppressExceptions, string userName, string password, string cacheName, object userState) {
            if ((this.ClearCacheOperationCompleted == null)) {
                this.ClearCacheOperationCompleted = new System.Threading.SendOrPostCallback(this.OnClearCacheOperationCompleted);
            }
            this.InvokeAsync("ClearCache", new object[] {
                        suppressExceptions,
                        userName,
                        password,
                        cacheName}, this.ClearCacheOperationCompleted, userState);
        }
        
        private void OnClearCacheOperationCompleted(object arg) {
            if ((this.ClearCacheCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ClearCacheCompleted(this, new ClearCacheCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ToGuid", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ToGuid() {
            object[] results = this.Invoke("ToGuid", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ToGuidAsync() {
            this.ToGuidAsync(null);
        }
        
        /// <remarks/>
        public void ToGuidAsync(object userState) {
            if ((this.ToGuidOperationCompleted == null)) {
                this.ToGuidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnToGuidOperationCompleted);
            }
            this.InvokeAsync("ToGuid", new object[0], this.ToGuidOperationCompleted, userState);
        }
        
        private void OnToGuidOperationCompleted(object arg) {
            if ((this.ToGuidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ToGuidCompleted(this, new ToGuidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LogUsage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet LogUsage(bool suppressExceptions, string userName, string password, string usageData) {
            object[] results = this.Invoke("LogUsage", new object[] {
                        suppressExceptions,
                        userName,
                        password,
                        usageData});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void LogUsageAsync(bool suppressExceptions, string userName, string password, string usageData) {
            this.LogUsageAsync(suppressExceptions, userName, password, usageData, null);
        }
        
        /// <remarks/>
        public void LogUsageAsync(bool suppressExceptions, string userName, string password, string usageData, object userState) {
            if ((this.LogUsageOperationCompleted == null)) {
                this.LogUsageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLogUsageOperationCompleted);
            }
            this.InvokeAsync("LogUsage", new object[] {
                        suppressExceptions,
                        userName,
                        password,
                        usageData}, this.LogUsageOperationCompleted, userState);
        }
        
        private void OnLogUsageOperationCompleted(object arg) {
            if ((this.LogUsageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LogUsageCompleted(this, new LogUsageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Search", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Search(bool suppressExceptions, string userName, string password, string query, bool ignoreCase, bool andTermsTogether, string indexList, string resolverName, int offset, int limit) {
            object[] results = this.Invoke("Search", new object[] {
                        suppressExceptions,
                        userName,
                        password,
                        query,
                        ignoreCase,
                        andTermsTogether,
                        indexList,
                        resolverName,
                        offset,
                        limit});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SearchAsync(bool suppressExceptions, string userName, string password, string query, bool ignoreCase, bool andTermsTogether, string indexList, string resolverName, int offset, int limit) {
            this.SearchAsync(suppressExceptions, userName, password, query, ignoreCase, andTermsTogether, indexList, resolverName, offset, limit, null);
        }
        
        /// <remarks/>
        public void SearchAsync(bool suppressExceptions, string userName, string password, string query, bool ignoreCase, bool andTermsTogether, string indexList, string resolverName, int offset, int limit, object userState) {
            if ((this.SearchOperationCompleted == null)) {
                this.SearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchOperationCompleted);
            }
            this.InvokeAsync("Search", new object[] {
                        suppressExceptions,
                        userName,
                        password,
                        query,
                        ignoreCase,
                        andTermsTogether,
                        indexList,
                        resolverName,
                        offset,
                        limit}, this.SearchOperationCompleted, userState);
        }
        
        private void OnSearchOperationCompleted(object arg) {
            if ((this.SearchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchCompleted(this, new SearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListSearchIndexes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ListSearchIndexes(bool suppressExceptions, string userName, string password, bool enabledOnly) {
            object[] results = this.Invoke("ListSearchIndexes", new object[] {
                        suppressExceptions,
                        userName,
                        password,
                        enabledOnly});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ListSearchIndexesAsync(bool suppressExceptions, string userName, string password, bool enabledOnly) {
            this.ListSearchIndexesAsync(suppressExceptions, userName, password, enabledOnly, null);
        }
        
        /// <remarks/>
        public void ListSearchIndexesAsync(bool suppressExceptions, string userName, string password, bool enabledOnly, object userState) {
            if ((this.ListSearchIndexesOperationCompleted == null)) {
                this.ListSearchIndexesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListSearchIndexesOperationCompleted);
            }
            this.InvokeAsync("ListSearchIndexes", new object[] {
                        suppressExceptions,
                        userName,
                        password,
                        enabledOnly}, this.ListSearchIndexesOperationCompleted, userState);
        }
        
        private void OnListSearchIndexesOperationCompleted(object arg) {
            if ((this.ListSearchIndexesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListSearchIndexesCompleted(this, new ListSearchIndexesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet CreateUser(bool suppressExceptions, string userName, string password, string newUserUserName, string newUserPassword, bool newUserEnabled) {
            object[] results = this.Invoke("CreateUser", new object[] {
                        suppressExceptions,
                        userName,
                        password,
                        newUserUserName,
                        newUserPassword,
                        newUserEnabled});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void CreateUserAsync(bool suppressExceptions, string userName, string password, string newUserUserName, string newUserPassword, bool newUserEnabled) {
            this.CreateUserAsync(suppressExceptions, userName, password, newUserUserName, newUserPassword, newUserEnabled, null);
        }
        
        /// <remarks/>
        public void CreateUserAsync(bool suppressExceptions, string userName, string password, string newUserUserName, string newUserPassword, bool newUserEnabled, object userState) {
            if ((this.CreateUserOperationCompleted == null)) {
                this.CreateUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateUserOperationCompleted);
            }
            this.InvokeAsync("CreateUser", new object[] {
                        suppressExceptions,
                        userName,
                        password,
                        newUserUserName,
                        newUserPassword,
                        newUserEnabled}, this.CreateUserOperationCompleted, userState);
        }
        
        private void OnCreateUserOperationCompleted(object arg) {
            if ((this.CreateUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateUserCompleted(this, new CreateUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ValidateLogin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ValidateLogin(bool suppressExceptions, string userName, string password) {
            object[] results = this.Invoke("ValidateLogin", new object[] {
                        suppressExceptions,
                        userName,
                        password});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateLoginAsync(bool suppressExceptions, string userName, string password) {
            this.ValidateLoginAsync(suppressExceptions, userName, password, null);
        }
        
        /// <remarks/>
        public void ValidateLoginAsync(bool suppressExceptions, string userName, string password, object userState) {
            if ((this.ValidateLoginOperationCompleted == null)) {
                this.ValidateLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateLoginOperationCompleted);
            }
            this.InvokeAsync("ValidateLogin", new object[] {
                        suppressExceptions,
                        userName,
                        password}, this.ValidateLoginOperationCompleted, userState);
        }
        
        private void OnValidateLoginOperationCompleted(object arg) {
            if ((this.ValidateLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateLoginCompleted(this, new ValidateLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ChangePassword", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ChangePassword(bool suppressExceptions, string userName, string password, string targetUserName, string newPassword) {
            object[] results = this.Invoke("ChangePassword", new object[] {
                        suppressExceptions,
                        userName,
                        password,
                        targetUserName,
                        newPassword});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ChangePasswordAsync(bool suppressExceptions, string userName, string password, string targetUserName, string newPassword) {
            this.ChangePasswordAsync(suppressExceptions, userName, password, targetUserName, newPassword, null);
        }
        
        /// <remarks/>
        public void ChangePasswordAsync(bool suppressExceptions, string userName, string password, string targetUserName, string newPassword, object userState) {
            if ((this.ChangePasswordOperationCompleted == null)) {
                this.ChangePasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangePasswordOperationCompleted);
            }
            this.InvokeAsync("ChangePassword", new object[] {
                        suppressExceptions,
                        userName,
                        password,
                        targetUserName,
                        newPassword}, this.ChangePasswordOperationCompleted, userState);
        }
        
        private void OnChangePasswordOperationCompleted(object arg) {
            if ((this.ChangePasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangePasswordCompleted(this, new ChangePasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RenameList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RenameList(bool suppressExceptions, string userName, string password, string existingGroupName, string newGroupName, string existingTabName, string newTabName, int cooperatorID) {
            object[] results = this.Invoke("RenameList", new object[] {
                        suppressExceptions,
                        userName,
                        password,
                        existingGroupName,
                        newGroupName,
                        existingTabName,
                        newTabName,
                        cooperatorID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RenameListAsync(bool suppressExceptions, string userName, string password, string existingGroupName, string newGroupName, string existingTabName, string newTabName, int cooperatorID) {
            this.RenameListAsync(suppressExceptions, userName, password, existingGroupName, newGroupName, existingTabName, newTabName, cooperatorID, null);
        }
        
        /// <remarks/>
        public void RenameListAsync(bool suppressExceptions, string userName, string password, string existingGroupName, string newGroupName, string existingTabName, string newTabName, int cooperatorID, object userState) {
            if ((this.RenameListOperationCompleted == null)) {
                this.RenameListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRenameListOperationCompleted);
            }
            this.InvokeAsync("RenameList", new object[] {
                        suppressExceptions,
                        userName,
                        password,
                        existingGroupName,
                        newGroupName,
                        existingTabName,
                        newTabName,
                        cooperatorID}, this.RenameListOperationCompleted, userState);
        }
        
        private void OnRenameListOperationCompleted(object arg) {
            if ((this.RenameListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RenameListCompleted(this, new RenameListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RenameTab", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RenameTab(bool suppressExceptions, string userName, string password, string existingTabName, string newTabName, int cooperatorID) {
            object[] results = this.Invoke("RenameTab", new object[] {
                        suppressExceptions,
                        userName,
                        password,
                        existingTabName,
                        newTabName,
                        cooperatorID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RenameTabAsync(bool suppressExceptions, string userName, string password, string existingTabName, string newTabName, int cooperatorID) {
            this.RenameTabAsync(suppressExceptions, userName, password, existingTabName, newTabName, cooperatorID, null);
        }
        
        /// <remarks/>
        public void RenameTabAsync(bool suppressExceptions, string userName, string password, string existingTabName, string newTabName, int cooperatorID, object userState) {
            if ((this.RenameTabOperationCompleted == null)) {
                this.RenameTabOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRenameTabOperationCompleted);
            }
            this.InvokeAsync("RenameTab", new object[] {
                        suppressExceptions,
                        userName,
                        password,
                        existingTabName,
                        newTabName,
                        cooperatorID}, this.RenameTabOperationCompleted, userState);
        }
        
        private void OnRenameTabOperationCompleted(object arg) {
            if ((this.RenameTabCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RenameTabCompleted(this, new RenameTabCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ChangeLanguage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ChangeLanguage(bool suppressExceptions, string userName, string password, int newLanguageID) {
            object[] results = this.Invoke("ChangeLanguage", new object[] {
                        suppressExceptions,
                        userName,
                        password,
                        newLanguageID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ChangeLanguageAsync(bool suppressExceptions, string userName, string password, int newLanguageID) {
            this.ChangeLanguageAsync(suppressExceptions, userName, password, newLanguageID, null);
        }
        
        /// <remarks/>
        public void ChangeLanguageAsync(bool suppressExceptions, string userName, string password, int newLanguageID, object userState) {
            if ((this.ChangeLanguageOperationCompleted == null)) {
                this.ChangeLanguageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangeLanguageOperationCompleted);
            }
            this.InvokeAsync("ChangeLanguage", new object[] {
                        suppressExceptions,
                        userName,
                        password,
                        newLanguageID}, this.ChangeLanguageOperationCompleted, userState);
        }
        
        private void OnChangeLanguageOperationCompleted(object arg) {
            if ((this.ChangeLanguageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangeLanguageCompleted(this, new ChangeLanguageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetVersion", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetVersion() {
            object[] results = this.Invoke("GetVersion", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetVersionAsync() {
            this.GetVersionAsync(null);
        }
        
        /// <remarks/>
        public void GetVersionAsync(object userState) {
            if ((this.GetVersionOperationCompleted == null)) {
                this.GetVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVersionOperationCompleted);
            }
            this.InvokeAsync("GetVersion", new object[0], this.GetVersionOperationCompleted, userState);
        }
        
        private void OnGetVersionOperationCompleted(object arg) {
            if ((this.GetVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVersionCompleted(this, new GetVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet DeleteList(bool suppressExceptions, string userName, string password, string groupName, string tabName, int cooperatorID) {
            object[] results = this.Invoke("DeleteList", new object[] {
                        suppressExceptions,
                        userName,
                        password,
                        groupName,
                        tabName,
                        cooperatorID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteListAsync(bool suppressExceptions, string userName, string password, string groupName, string tabName, int cooperatorID) {
            this.DeleteListAsync(suppressExceptions, userName, password, groupName, tabName, cooperatorID, null);
        }
        
        /// <remarks/>
        public void DeleteListAsync(bool suppressExceptions, string userName, string password, string groupName, string tabName, int cooperatorID, object userState) {
            if ((this.DeleteListOperationCompleted == null)) {
                this.DeleteListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteListOperationCompleted);
            }
            this.InvokeAsync("DeleteList", new object[] {
                        suppressExceptions,
                        userName,
                        password,
                        groupName,
                        tabName,
                        cooperatorID}, this.DeleteListOperationCompleted, userState);
        }
        
        private void OnDeleteListOperationCompleted(object arg) {
            if ((this.DeleteListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteListCompleted(this, new DeleteListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TestLog", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet TestLog() {
            object[] results = this.Invoke("TestLog", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void TestLogAsync() {
            this.TestLogAsync(null);
        }
        
        /// <remarks/>
        public void TestLogAsync(object userState) {
            if ((this.TestLogOperationCompleted == null)) {
                this.TestLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestLogOperationCompleted);
            }
            this.InvokeAsync("TestLog", new object[0], this.TestLogOperationCompleted, userState);
        }
        
        private void OnTestLogOperationCompleted(object arg) {
            if ((this.TestLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestLogCompleted(this, new TestLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveDataSet", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SaveDataSet(bool suppressExceptions, string userName, string password, System.Data.DataSet ds) {
            object[] results = this.Invoke("SaveDataSet", new object[] {
                        suppressExceptions,
                        userName,
                        password,
                        ds});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SaveDataSetAsync(bool suppressExceptions, string userName, string password, System.Data.DataSet ds) {
            this.SaveDataSetAsync(suppressExceptions, userName, password, ds, null);
        }
        
        /// <remarks/>
        public void SaveDataSetAsync(bool suppressExceptions, string userName, string password, System.Data.DataSet ds, object userState) {
            if ((this.SaveDataSetOperationCompleted == null)) {
                this.SaveDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveDataSetOperationCompleted);
            }
            this.InvokeAsync("SaveDataSet", new object[] {
                        suppressExceptions,
                        userName,
                        password,
                        ds}, this.SaveDataSetOperationCompleted, userState);
        }
        
        private void OnSaveDataSetOperationCompleted(object arg) {
            if ((this.SaveDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveDataSetCompleted(this, new SaveDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DeleteDataViewDefinitionCompletedEventHandler(object sender, DeleteDataViewDefinitionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteDataViewDefinitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteDataViewDefinitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetDataViewDefinitionCompletedEventHandler(object sender, GetDataViewDefinitionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataViewDefinitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataViewDefinitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CreateDataViewDefinitionCompletedEventHandler(object sender, CreateDataViewDefinitionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateDataViewDefinitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateDataViewDefinitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetDataCompletedEventHandler(object sender, GetDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetDataViaDataSetCompletedEventHandler(object sender, GetDataViaDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataViaDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataViaDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetDataParameterTemplateCompletedEventHandler(object sender, GetDataParameterTemplateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataParameterTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataParameterTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ClearCacheCompletedEventHandler(object sender, ClearCacheCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ClearCacheCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ClearCacheCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ToGuidCompletedEventHandler(object sender, ToGuidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ToGuidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ToGuidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void LogUsageCompletedEventHandler(object sender, LogUsageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LogUsageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LogUsageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SearchCompletedEventHandler(object sender, SearchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ListSearchIndexesCompletedEventHandler(object sender, ListSearchIndexesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListSearchIndexesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListSearchIndexesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CreateUserCompletedEventHandler(object sender, CreateUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ValidateLoginCompletedEventHandler(object sender, ValidateLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ChangePasswordCompletedEventHandler(object sender, ChangePasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangePasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangePasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void RenameListCompletedEventHandler(object sender, RenameListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RenameListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RenameListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void RenameTabCompletedEventHandler(object sender, RenameTabCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RenameTabCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RenameTabCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ChangeLanguageCompletedEventHandler(object sender, ChangeLanguageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangeLanguageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangeLanguageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetVersionCompletedEventHandler(object sender, GetVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DeleteListCompletedEventHandler(object sender, DeleteListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void TestLogCompletedEventHandler(object sender, TestLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SaveDataSetCompletedEventHandler(object sender, SaveDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591