//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4952
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GrinGlobal.Search.Engine.Service.SearchSvc {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.grin-global.org/", ConfigurationName="SearchSvc.ISearchHost")]
    public interface ISearchHost {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.grin-global.org/ISearchHost/Search", ReplyAction="http://www.grin-global.org/ISearchHost/SearchResponse")]
        string Search(string searchString, bool ignoreCase, bool autoAndConsecutiveLiterals, System.Collections.Generic.List<string> indexNames, string resolverName, int offset, int limit, string ds, string options);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.grin-global.org/ISearchHost/SearchForHits", ReplyAction="http://www.grin-global.org/ISearchHost/SearchForHitsResponse")]
        System.Collections.Generic.List<GrinGlobal.Search.Engine.ResolvedHitData> SearchForHits(string searchString, bool ignoreCase, bool autoAndConsecutiveLiterals, System.Collections.Generic.List<string> indexNames, string resolverName, bool returnHitsWithNoResolvedIDs, int offset, int limit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.grin-global.org/ISearchHost/RotateIndexes", ReplyAction="http://www.grin-global.org/ISearchHost/RotateIndexesResponse")]
        void RotateIndexes(System.Collections.Generic.List<string> indexNames);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.grin-global.org/ISearchHost/ListIndexes", ReplyAction="http://www.grin-global.org/ISearchHost/ListIndexesResponse")]
        System.Collections.Generic.List<string> ListIndexes(bool enabledOnly);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.grin-global.org/ISearchHost/GetInfo", ReplyAction="http://www.grin-global.org/ISearchHost/GetInfoResponse")]
        string GetInfo(bool enabledIndexesOnly);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.grin-global.org/ISearchHost/GetInfoEx", ReplyAction="http://www.grin-global.org/ISearchHost/GetInfoExResponse")]
        string GetInfoEx(bool enabledIndexesOnly, string onlyThisIndex, string onlyThisResolver);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.grin-global.org/ISearchHost/GetStatus", ReplyAction="http://www.grin-global.org/ISearchHost/GetStatusResponse")]
        string GetStatus();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.grin-global.org/ISearchHost/GetLatestMessages", ReplyAction="http://www.grin-global.org/ISearchHost/GetLatestMessagesResponse")]
        string GetLatestMessages(int maxMessages);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.grin-global.org/ISearchHost/VerifyIndexes", ReplyAction="http://www.grin-global.org/ISearchHost/VerifyIndexesResponse")]
        System.Collections.Generic.List<string> VerifyIndexes(System.Collections.Generic.List<string> indexNames, bool checkLeaves);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.grin-global.org/ISearchHost/RebuildIndexes", ReplyAction="http://www.grin-global.org/ISearchHost/RebuildIndexesResponse")]
        void RebuildIndexes(System.Collections.Generic.List<string> indexNames, bool onlyIfEnabled, bool rotateInOnComplete);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.grin-global.org/ISearchHost/EnableIndexes", ReplyAction="http://www.grin-global.org/ISearchHost/EnableIndexesResponse")]
        void EnableIndexes(System.Collections.Generic.List<string> indexNames);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.grin-global.org/ISearchHost/DisableResolver", ReplyAction="http://www.grin-global.org/ISearchHost/DisableResolverResponse")]
        void DisableResolver(string indexName, string reseolverName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.grin-global.org/ISearchHost/EnableResolver", ReplyAction="http://www.grin-global.org/ISearchHost/EnableResolverResponse")]
        void EnableResolver(string indexName, string reseolverName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.grin-global.org/ISearchHost/SaveResolverSettings", ReplyAction="http://www.grin-global.org/ISearchHost/SaveResolverSettingsResponse")]
        void SaveResolverSettings(string ds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.grin-global.org/ISearchHost/SaveIndexSettings", ReplyAction="http://www.grin-global.org/ISearchHost/SaveIndexSettingsResponse")]
        void SaveIndexSettings(string ds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.grin-global.org/ISearchHost/SaveIndexerSettings", ReplyAction="http://www.grin-global.org/ISearchHost/SaveIndexerSettingsResponse")]
        void SaveIndexerSettings(string ds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.grin-global.org/ISearchHost/DisableIndexes", ReplyAction="http://www.grin-global.org/ISearchHost/DisableIndexesResponse")]
        void DisableIndexes(System.Collections.Generic.List<string> indexNames);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.grin-global.org/ISearchHost/DeleteIndexes", ReplyAction="http://www.grin-global.org/ISearchHost/DeleteIndexesResponse")]
        void DeleteIndexes(System.Collections.Generic.List<string> indexNames);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.grin-global.org/ISearchHost/ReloadIndexes", ReplyAction="http://www.grin-global.org/ISearchHost/ReloadIndexesResponse")]
        void ReloadIndexes(System.Collections.Generic.List<string> indexNames);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.grin-global.org/ISearchHost/ReportOnIndexes", ReplyAction="http://www.grin-global.org/ISearchHost/ReportOnIndexesResponse")]
        System.Collections.Generic.List<GrinGlobal.Search.Engine.IndexReport> ReportOnIndexes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.grin-global.org/ISearchHost/Ping", ReplyAction="http://www.grin-global.org/ISearchHost/PingResponse")]
        bool Ping();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.grin-global.org/ISearchHost/UpdateIndex", ReplyAction="http://www.grin-global.org/ISearchHost/UpdateIndexResponse")]
        void UpdateIndex(string indexName, System.Collections.Generic.List<GrinGlobal.Interface.UpdateRow> rows);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.grin-global.org/ISearchHost/UpdateIndexRow", ReplyAction="http://www.grin-global.org/ISearchHost/UpdateIndexRowResponse")]
        void UpdateIndexRow(string indexName, GrinGlobal.Interface.UpdateRow row);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.grin-global.org/ISearchHost/DefragIndexes", ReplyAction="http://www.grin-global.org/ISearchHost/DefragIndexesResponse")]
        void DefragIndexes(System.Collections.Generic.List<string> indexNames, bool rotateInOnComplete);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface ISearchHostChannel : GrinGlobal.Search.Engine.Service.SearchSvc.ISearchHost, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class SearchHostClient : System.ServiceModel.ClientBase<GrinGlobal.Search.Engine.Service.SearchSvc.ISearchHost>, GrinGlobal.Search.Engine.Service.SearchSvc.ISearchHost {
        
        public SearchHostClient() {
        }
        
        public SearchHostClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SearchHostClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SearchHostClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SearchHostClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string Search(string searchString, bool ignoreCase, bool autoAndConsecutiveLiterals, System.Collections.Generic.List<string> indexNames, string resolverName, int offset, int limit, string ds, string options) {
            return base.Channel.Search(searchString, ignoreCase, autoAndConsecutiveLiterals, indexNames, resolverName, offset, limit, ds, options);
        }
        
        public System.Collections.Generic.List<GrinGlobal.Search.Engine.ResolvedHitData> SearchForHits(string searchString, bool ignoreCase, bool autoAndConsecutiveLiterals, System.Collections.Generic.List<string> indexNames, string resolverName, bool returnHitsWithNoResolvedIDs, int offset, int limit) {
            return base.Channel.SearchForHits(searchString, ignoreCase, autoAndConsecutiveLiterals, indexNames, resolverName, returnHitsWithNoResolvedIDs, offset, limit);
        }
        
        public void RotateIndexes(System.Collections.Generic.List<string> indexNames) {
            base.Channel.RotateIndexes(indexNames);
        }
        
        public System.Collections.Generic.List<string> ListIndexes(bool enabledOnly) {
            return base.Channel.ListIndexes(enabledOnly);
        }
        
        public string GetInfo(bool enabledIndexesOnly) {
            return base.Channel.GetInfo(enabledIndexesOnly);
        }
        
        public string GetInfoEx(bool enabledIndexesOnly, string onlyThisIndex, string onlyThisResolver) {
            return base.Channel.GetInfoEx(enabledIndexesOnly, onlyThisIndex, onlyThisResolver);
        }
        
        public string GetStatus() {
            return base.Channel.GetStatus();
        }
        
        public string GetLatestMessages(int maxMessages) {
            return base.Channel.GetLatestMessages(maxMessages);
        }
        
        public System.Collections.Generic.List<string> VerifyIndexes(System.Collections.Generic.List<string> indexNames, bool checkLeaves) {
            return base.Channel.VerifyIndexes(indexNames, checkLeaves);
        }
        
        public void RebuildIndexes(System.Collections.Generic.List<string> indexNames, bool onlyIfEnabled, bool rotateInOnComplete) {
            base.Channel.RebuildIndexes(indexNames, onlyIfEnabled, rotateInOnComplete);
        }
        
        public void EnableIndexes(System.Collections.Generic.List<string> indexNames) {
            base.Channel.EnableIndexes(indexNames);
        }
        
        public void DisableResolver(string indexName, string reseolverName) {
            base.Channel.DisableResolver(indexName, reseolverName);
        }
        
        public void EnableResolver(string indexName, string reseolverName) {
            base.Channel.EnableResolver(indexName, reseolverName);
        }
        
        public void SaveResolverSettings(string ds) {
            base.Channel.SaveResolverSettings(ds);
        }
        
        public void SaveIndexSettings(string ds) {
            base.Channel.SaveIndexSettings(ds);
        }
        
        public void SaveIndexerSettings(string ds) {
            base.Channel.SaveIndexerSettings(ds);
        }
        
        public void DisableIndexes(System.Collections.Generic.List<string> indexNames) {
            base.Channel.DisableIndexes(indexNames);
        }
        
        public void DeleteIndexes(System.Collections.Generic.List<string> indexNames) {
            base.Channel.DeleteIndexes(indexNames);
        }
        
        public void ReloadIndexes(System.Collections.Generic.List<string> indexNames) {
            base.Channel.ReloadIndexes(indexNames);
        }
        
        public System.Collections.Generic.List<GrinGlobal.Search.Engine.IndexReport> ReportOnIndexes() {
            return base.Channel.ReportOnIndexes();
        }
        
        public bool Ping() {
            return base.Channel.Ping();
        }
        
        public void UpdateIndex(string indexName, System.Collections.Generic.List<GrinGlobal.Interface.UpdateRow> rows) {
            base.Channel.UpdateIndex(indexName, rows);
        }
        
        public void UpdateIndexRow(string indexName, GrinGlobal.Interface.UpdateRow row) {
            base.Channel.UpdateIndexRow(indexName, row);
        }
        
        public void DefragIndexes(System.Collections.Generic.List<string> indexNames, bool rotateInOnComplete) {
            base.Channel.DefragIndexes(indexNames, rotateInOnComplete);
        }
    }
}
