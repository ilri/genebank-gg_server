//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.17929.
// 
#pragma warning disable 1591

namespace GrinGlobal.Import.ggws {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="GUISoap", Namespace="http://tempuri.org/")]
    public partial class GUI : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLookupTableStatsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLookupTableDataSinceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataParameterTemplateOperationCompleted;
        
        private System.Threading.SendOrPostCallback ClearCacheOperationCompleted;
        
        private System.Threading.SendOrPostCallback TransferOwnershipOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback RenameListOperationCompleted;
        
        private System.Threading.SendOrPostCallback RenameTabOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteListOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteImageOperationCompleted;
        
        private System.Threading.SendOrPostCallback DownloadImageOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadImageOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFileInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSearchEngineInfoOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public GUI() {
            this.Url = global::GrinGlobal.Import.Properties.Settings.Default.GrinGlobal_Import_ggws_GUI;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetDataCompletedEventHandler GetDataCompleted;
        
        /// <remarks/>
        public event GetLookupTableStatsCompletedEventHandler GetLookupTableStatsCompleted;
        
        /// <remarks/>
        public event GetLookupTableDataSinceCompletedEventHandler GetLookupTableDataSinceCompleted;
        
        /// <remarks/>
        public event GetDataParameterTemplateCompletedEventHandler GetDataParameterTemplateCompleted;
        
        /// <remarks/>
        public event ClearCacheCompletedEventHandler ClearCacheCompleted;
        
        /// <remarks/>
        public event TransferOwnershipCompletedEventHandler TransferOwnershipCompleted;
        
        /// <remarks/>
        public event SearchCompletedEventHandler SearchCompleted;
        
        /// <remarks/>
        public event ValidateLoginCompletedEventHandler ValidateLoginCompleted;
        
        /// <remarks/>
        public event RenameListCompletedEventHandler RenameListCompleted;
        
        /// <remarks/>
        public event RenameTabCompletedEventHandler RenameTabCompleted;
        
        /// <remarks/>
        public event GetVersionCompletedEventHandler GetVersionCompleted;
        
        /// <remarks/>
        public event DeleteListCompletedEventHandler DeleteListCompleted;
        
        /// <remarks/>
        public event SaveDataSetCompletedEventHandler SaveDataSetCompleted;
        
        /// <remarks/>
        public event DeleteImageCompletedEventHandler DeleteImageCompleted;
        
        /// <remarks/>
        public event DownloadImageCompletedEventHandler DownloadImageCompleted;
        
        /// <remarks/>
        public event UploadImageCompletedEventHandler UploadImageCompleted;
        
        /// <remarks/>
        public event GetFileInfoCompletedEventHandler GetFileInfoCompleted;
        
        /// <remarks/>
        public event GetSearchEngineInfoCompletedEventHandler GetSearchEngineInfoCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetData(bool suppressExceptions, string userName, string password, string resultsetNameOrSql, string delimitedParameterList, int offset, int limit, string options) {
            object[] results = this.Invoke("GetData", new object[] {
                        suppressExceptions,
                        userName,
                        password,
                        resultsetNameOrSql,
                        delimitedParameterList,
                        offset,
                        limit,
                        options});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataAsync(bool suppressExceptions, string userName, string password, string resultsetNameOrSql, string delimitedParameterList, int offset, int limit, string options) {
            this.GetDataAsync(suppressExceptions, userName, password, resultsetNameOrSql, delimitedParameterList, offset, limit, options, null);
        }
        
        /// <remarks/>
        public void GetDataAsync(bool suppressExceptions, string userName, string password, string resultsetNameOrSql, string delimitedParameterList, int offset, int limit, string options, object userState) {
            if ((this.GetDataOperationCompleted == null)) {
                this.GetDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataOperationCompleted);
            }
            this.InvokeAsync("GetData", new object[] {
                        suppressExceptions,
                        userName,
                        password,
                        resultsetNameOrSql,
                        delimitedParameterList,
                        offset,
                        limit,
                        options}, this.GetDataOperationCompleted, userState);
        }
        
        private void OnGetDataOperationCompleted(object arg) {
            if ((this.GetDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataCompleted(this, new GetDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLookupTableStats", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetLookupTableStats(bool suppressExceptions, string userName, string password, string tableName) {
            object[] results = this.Invoke("GetLookupTableStats", new object[] {
                        suppressExceptions,
                        userName,
                        password,
                        tableName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetLookupTableStatsAsync(bool suppressExceptions, string userName, string password, string tableName) {
            this.GetLookupTableStatsAsync(suppressExceptions, userName, password, tableName, null);
        }
        
        /// <remarks/>
        public void GetLookupTableStatsAsync(bool suppressExceptions, string userName, string password, string tableName, object userState) {
            if ((this.GetLookupTableStatsOperationCompleted == null)) {
                this.GetLookupTableStatsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLookupTableStatsOperationCompleted);
            }
            this.InvokeAsync("GetLookupTableStats", new object[] {
                        suppressExceptions,
                        userName,
                        password,
                        tableName}, this.GetLookupTableStatsOperationCompleted, userState);
        }
        
        private void OnGetLookupTableStatsOperationCompleted(object arg) {
            if ((this.GetLookupTableStatsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLookupTableStatsCompleted(this, new GetLookupTableStatsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLookupTableDataSince", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetLookupTableDataSince(bool suppressExceptions, string userName, string password, string tableName, System.DateTime sinceDate) {
            object[] results = this.Invoke("GetLookupTableDataSince", new object[] {
                        suppressExceptions,
                        userName,
                        password,
                        tableName,
                        sinceDate});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetLookupTableDataSinceAsync(bool suppressExceptions, string userName, string password, string tableName, System.DateTime sinceDate) {
            this.GetLookupTableDataSinceAsync(suppressExceptions, userName, password, tableName, sinceDate, null);
        }
        
        /// <remarks/>
        public void GetLookupTableDataSinceAsync(bool suppressExceptions, string userName, string password, string tableName, System.DateTime sinceDate, object userState) {
            if ((this.GetLookupTableDataSinceOperationCompleted == null)) {
                this.GetLookupTableDataSinceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLookupTableDataSinceOperationCompleted);
            }
            this.InvokeAsync("GetLookupTableDataSince", new object[] {
                        suppressExceptions,
                        userName,
                        password,
                        tableName,
                        sinceDate}, this.GetLookupTableDataSinceOperationCompleted, userState);
        }
        
        private void OnGetLookupTableDataSinceOperationCompleted(object arg) {
            if ((this.GetLookupTableDataSinceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLookupTableDataSinceCompleted(this, new GetLookupTableDataSinceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDataParameterTemplate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDataParameterTemplate(bool suppressExceptions, string userName, string password, string resultsetName) {
            object[] results = this.Invoke("GetDataParameterTemplate", new object[] {
                        suppressExceptions,
                        userName,
                        password,
                        resultsetName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataParameterTemplateAsync(bool suppressExceptions, string userName, string password, string resultsetName) {
            this.GetDataParameterTemplateAsync(suppressExceptions, userName, password, resultsetName, null);
        }
        
        /// <remarks/>
        public void GetDataParameterTemplateAsync(bool suppressExceptions, string userName, string password, string resultsetName, object userState) {
            if ((this.GetDataParameterTemplateOperationCompleted == null)) {
                this.GetDataParameterTemplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataParameterTemplateOperationCompleted);
            }
            this.InvokeAsync("GetDataParameterTemplate", new object[] {
                        suppressExceptions,
                        userName,
                        password,
                        resultsetName}, this.GetDataParameterTemplateOperationCompleted, userState);
        }
        
        private void OnGetDataParameterTemplateOperationCompleted(object arg) {
            if ((this.GetDataParameterTemplateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataParameterTemplateCompleted(this, new GetDataParameterTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ClearCache", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ClearCache(bool suppressExceptions, string userName, string password, string cacheName) {
            object[] results = this.Invoke("ClearCache", new object[] {
                        suppressExceptions,
                        userName,
                        password,
                        cacheName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ClearCacheAsync(bool suppressExceptions, string userName, string password, string cacheName) {
            this.ClearCacheAsync(suppressExceptions, userName, password, cacheName, null);
        }
        
        /// <remarks/>
        public void ClearCacheAsync(bool suppressExceptions, string userName, string password, string cacheName, object userState) {
            if ((this.ClearCacheOperationCompleted == null)) {
                this.ClearCacheOperationCompleted = new System.Threading.SendOrPostCallback(this.OnClearCacheOperationCompleted);
            }
            this.InvokeAsync("ClearCache", new object[] {
                        suppressExceptions,
                        userName,
                        password,
                        cacheName}, this.ClearCacheOperationCompleted, userState);
        }
        
        private void OnClearCacheOperationCompleted(object arg) {
            if ((this.ClearCacheCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ClearCacheCompleted(this, new ClearCacheCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TransferOwnership", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet TransferOwnership(bool suppressExceptions, string userName, string password, System.Data.DataSet ds, int newOwnerCooperatorID) {
            object[] results = this.Invoke("TransferOwnership", new object[] {
                        suppressExceptions,
                        userName,
                        password,
                        ds,
                        newOwnerCooperatorID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void TransferOwnershipAsync(bool suppressExceptions, string userName, string password, System.Data.DataSet ds, int newOwnerCooperatorID) {
            this.TransferOwnershipAsync(suppressExceptions, userName, password, ds, newOwnerCooperatorID, null);
        }
        
        /// <remarks/>
        public void TransferOwnershipAsync(bool suppressExceptions, string userName, string password, System.Data.DataSet ds, int newOwnerCooperatorID, object userState) {
            if ((this.TransferOwnershipOperationCompleted == null)) {
                this.TransferOwnershipOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTransferOwnershipOperationCompleted);
            }
            this.InvokeAsync("TransferOwnership", new object[] {
                        suppressExceptions,
                        userName,
                        password,
                        ds,
                        newOwnerCooperatorID}, this.TransferOwnershipOperationCompleted, userState);
        }
        
        private void OnTransferOwnershipOperationCompleted(object arg) {
            if ((this.TransferOwnershipCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TransferOwnershipCompleted(this, new TransferOwnershipCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Search", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Search(bool suppressExceptions, string userName, string password, string query, bool ignoreCase, bool andTermsTogether, string indexList, string resolverName, int offset, int limit, string options) {
            object[] results = this.Invoke("Search", new object[] {
                        suppressExceptions,
                        userName,
                        password,
                        query,
                        ignoreCase,
                        andTermsTogether,
                        indexList,
                        resolverName,
                        offset,
                        limit,
                        options});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SearchAsync(bool suppressExceptions, string userName, string password, string query, bool ignoreCase, bool andTermsTogether, string indexList, string resolverName, int offset, int limit, string options) {
            this.SearchAsync(suppressExceptions, userName, password, query, ignoreCase, andTermsTogether, indexList, resolverName, offset, limit, options, null);
        }
        
        /// <remarks/>
        public void SearchAsync(bool suppressExceptions, string userName, string password, string query, bool ignoreCase, bool andTermsTogether, string indexList, string resolverName, int offset, int limit, string options, object userState) {
            if ((this.SearchOperationCompleted == null)) {
                this.SearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchOperationCompleted);
            }
            this.InvokeAsync("Search", new object[] {
                        suppressExceptions,
                        userName,
                        password,
                        query,
                        ignoreCase,
                        andTermsTogether,
                        indexList,
                        resolverName,
                        offset,
                        limit,
                        options}, this.SearchOperationCompleted, userState);
        }
        
        private void OnSearchOperationCompleted(object arg) {
            if ((this.SearchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchCompleted(this, new SearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ValidateLogin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ValidateLogin(bool suppressExceptions, string userName, string password) {
            object[] results = this.Invoke("ValidateLogin", new object[] {
                        suppressExceptions,
                        userName,
                        password});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateLoginAsync(bool suppressExceptions, string userName, string password) {
            this.ValidateLoginAsync(suppressExceptions, userName, password, null);
        }
        
        /// <remarks/>
        public void ValidateLoginAsync(bool suppressExceptions, string userName, string password, object userState) {
            if ((this.ValidateLoginOperationCompleted == null)) {
                this.ValidateLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateLoginOperationCompleted);
            }
            this.InvokeAsync("ValidateLogin", new object[] {
                        suppressExceptions,
                        userName,
                        password}, this.ValidateLoginOperationCompleted, userState);
        }
        
        private void OnValidateLoginOperationCompleted(object arg) {
            if ((this.ValidateLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateLoginCompleted(this, new ValidateLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RenameList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RenameList(bool suppressExceptions, string userName, string password, string existingGroupName, string newGroupName, string existingTabName, string newTabName, int cooperatorID) {
            object[] results = this.Invoke("RenameList", new object[] {
                        suppressExceptions,
                        userName,
                        password,
                        existingGroupName,
                        newGroupName,
                        existingTabName,
                        newTabName,
                        cooperatorID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RenameListAsync(bool suppressExceptions, string userName, string password, string existingGroupName, string newGroupName, string existingTabName, string newTabName, int cooperatorID) {
            this.RenameListAsync(suppressExceptions, userName, password, existingGroupName, newGroupName, existingTabName, newTabName, cooperatorID, null);
        }
        
        /// <remarks/>
        public void RenameListAsync(bool suppressExceptions, string userName, string password, string existingGroupName, string newGroupName, string existingTabName, string newTabName, int cooperatorID, object userState) {
            if ((this.RenameListOperationCompleted == null)) {
                this.RenameListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRenameListOperationCompleted);
            }
            this.InvokeAsync("RenameList", new object[] {
                        suppressExceptions,
                        userName,
                        password,
                        existingGroupName,
                        newGroupName,
                        existingTabName,
                        newTabName,
                        cooperatorID}, this.RenameListOperationCompleted, userState);
        }
        
        private void OnRenameListOperationCompleted(object arg) {
            if ((this.RenameListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RenameListCompleted(this, new RenameListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RenameTab", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RenameTab(bool suppressExceptions, string userName, string password, string existingTabName, string newTabName, int cooperatorID) {
            object[] results = this.Invoke("RenameTab", new object[] {
                        suppressExceptions,
                        userName,
                        password,
                        existingTabName,
                        newTabName,
                        cooperatorID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RenameTabAsync(bool suppressExceptions, string userName, string password, string existingTabName, string newTabName, int cooperatorID) {
            this.RenameTabAsync(suppressExceptions, userName, password, existingTabName, newTabName, cooperatorID, null);
        }
        
        /// <remarks/>
        public void RenameTabAsync(bool suppressExceptions, string userName, string password, string existingTabName, string newTabName, int cooperatorID, object userState) {
            if ((this.RenameTabOperationCompleted == null)) {
                this.RenameTabOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRenameTabOperationCompleted);
            }
            this.InvokeAsync("RenameTab", new object[] {
                        suppressExceptions,
                        userName,
                        password,
                        existingTabName,
                        newTabName,
                        cooperatorID}, this.RenameTabOperationCompleted, userState);
        }
        
        private void OnRenameTabOperationCompleted(object arg) {
            if ((this.RenameTabCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RenameTabCompleted(this, new RenameTabCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetVersion", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetVersion() {
            object[] results = this.Invoke("GetVersion", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetVersionAsync() {
            this.GetVersionAsync(null);
        }
        
        /// <remarks/>
        public void GetVersionAsync(object userState) {
            if ((this.GetVersionOperationCompleted == null)) {
                this.GetVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVersionOperationCompleted);
            }
            this.InvokeAsync("GetVersion", new object[0], this.GetVersionOperationCompleted, userState);
        }
        
        private void OnGetVersionOperationCompleted(object arg) {
            if ((this.GetVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVersionCompleted(this, new GetVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet DeleteList(bool suppressExceptions, string userName, string password, string groupName, string tabName, int cooperatorID) {
            object[] results = this.Invoke("DeleteList", new object[] {
                        suppressExceptions,
                        userName,
                        password,
                        groupName,
                        tabName,
                        cooperatorID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteListAsync(bool suppressExceptions, string userName, string password, string groupName, string tabName, int cooperatorID) {
            this.DeleteListAsync(suppressExceptions, userName, password, groupName, tabName, cooperatorID, null);
        }
        
        /// <remarks/>
        public void DeleteListAsync(bool suppressExceptions, string userName, string password, string groupName, string tabName, int cooperatorID, object userState) {
            if ((this.DeleteListOperationCompleted == null)) {
                this.DeleteListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteListOperationCompleted);
            }
            this.InvokeAsync("DeleteList", new object[] {
                        suppressExceptions,
                        userName,
                        password,
                        groupName,
                        tabName,
                        cooperatorID}, this.DeleteListOperationCompleted, userState);
        }
        
        private void OnDeleteListOperationCompleted(object arg) {
            if ((this.DeleteListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteListCompleted(this, new DeleteListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveDataSet", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SaveDataSet(bool suppressExceptions, string userName, string password, System.Data.DataSet ds, string options) {
            object[] results = this.Invoke("SaveDataSet", new object[] {
                        suppressExceptions,
                        userName,
                        password,
                        ds,
                        options});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SaveDataSetAsync(bool suppressExceptions, string userName, string password, System.Data.DataSet ds, string options) {
            this.SaveDataSetAsync(suppressExceptions, userName, password, ds, options, null);
        }
        
        /// <remarks/>
        public void SaveDataSetAsync(bool suppressExceptions, string userName, string password, System.Data.DataSet ds, string options, object userState) {
            if ((this.SaveDataSetOperationCompleted == null)) {
                this.SaveDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveDataSetOperationCompleted);
            }
            this.InvokeAsync("SaveDataSet", new object[] {
                        suppressExceptions,
                        userName,
                        password,
                        ds,
                        options}, this.SaveDataSetOperationCompleted, userState);
        }
        
        private void OnSaveDataSetOperationCompleted(object arg) {
            if ((this.SaveDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveDataSetCompleted(this, new SaveDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteImage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteImage(string userName, string password, string imageFileName) {
            object[] results = this.Invoke("DeleteImage", new object[] {
                        userName,
                        password,
                        imageFileName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteImageAsync(string userName, string password, string imageFileName) {
            this.DeleteImageAsync(userName, password, imageFileName, null);
        }
        
        /// <remarks/>
        public void DeleteImageAsync(string userName, string password, string imageFileName, object userState) {
            if ((this.DeleteImageOperationCompleted == null)) {
                this.DeleteImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteImageOperationCompleted);
            }
            this.InvokeAsync("DeleteImage", new object[] {
                        userName,
                        password,
                        imageFileName}, this.DeleteImageOperationCompleted, userState);
        }
        
        private void OnDeleteImageOperationCompleted(object arg) {
            if ((this.DeleteImageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteImageCompleted(this, new DeleteImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DownloadImage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] DownloadImage(string appOrDocRelativePath) {
            object[] results = this.Invoke("DownloadImage", new object[] {
                        appOrDocRelativePath});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void DownloadImageAsync(string appOrDocRelativePath) {
            this.DownloadImageAsync(appOrDocRelativePath, null);
        }
        
        /// <remarks/>
        public void DownloadImageAsync(string appOrDocRelativePath, object userState) {
            if ((this.DownloadImageOperationCompleted == null)) {
                this.DownloadImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDownloadImageOperationCompleted);
            }
            this.InvokeAsync("DownloadImage", new object[] {
                        appOrDocRelativePath}, this.DownloadImageOperationCompleted, userState);
        }
        
        private void OnDownloadImageOperationCompleted(object arg) {
            if ((this.DownloadImageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DownloadImageCompleted(this, new DownloadImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UploadImage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UploadImage(string userName, string password, string appOrDocRelativePath, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] imageBytes, bool createThumbnail, bool overwriteIfExists) {
            object[] results = this.Invoke("UploadImage", new object[] {
                        userName,
                        password,
                        appOrDocRelativePath,
                        imageBytes,
                        createThumbnail,
                        overwriteIfExists});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UploadImageAsync(string userName, string password, string appOrDocRelativePath, byte[] imageBytes, bool createThumbnail, bool overwriteIfExists) {
            this.UploadImageAsync(userName, password, appOrDocRelativePath, imageBytes, createThumbnail, overwriteIfExists, null);
        }
        
        /// <remarks/>
        public void UploadImageAsync(string userName, string password, string appOrDocRelativePath, byte[] imageBytes, bool createThumbnail, bool overwriteIfExists, object userState) {
            if ((this.UploadImageOperationCompleted == null)) {
                this.UploadImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadImageOperationCompleted);
            }
            this.InvokeAsync("UploadImage", new object[] {
                        userName,
                        password,
                        appOrDocRelativePath,
                        imageBytes,
                        createThumbnail,
                        overwriteIfExists}, this.UploadImageOperationCompleted, userState);
        }
        
        private void OnUploadImageOperationCompleted(object arg) {
            if ((this.UploadImageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadImageCompleted(this, new UploadImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFileInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetFileInfo(bool suppressExceptions, string groupName, string versionName, bool onlyAvailable, bool onlyLatest) {
            object[] results = this.Invoke("GetFileInfo", new object[] {
                        suppressExceptions,
                        groupName,
                        versionName,
                        onlyAvailable,
                        onlyLatest});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetFileInfoAsync(bool suppressExceptions, string groupName, string versionName, bool onlyAvailable, bool onlyLatest) {
            this.GetFileInfoAsync(suppressExceptions, groupName, versionName, onlyAvailable, onlyLatest, null);
        }
        
        /// <remarks/>
        public void GetFileInfoAsync(bool suppressExceptions, string groupName, string versionName, bool onlyAvailable, bool onlyLatest, object userState) {
            if ((this.GetFileInfoOperationCompleted == null)) {
                this.GetFileInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFileInfoOperationCompleted);
            }
            this.InvokeAsync("GetFileInfo", new object[] {
                        suppressExceptions,
                        groupName,
                        versionName,
                        onlyAvailable,
                        onlyLatest}, this.GetFileInfoOperationCompleted, userState);
        }
        
        private void OnGetFileInfoOperationCompleted(object arg) {
            if ((this.GetFileInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFileInfoCompleted(this, new GetFileInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSearchEngineInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSearchEngineInfo(bool suppressExceptions, bool enabledIndexesOnly) {
            object[] results = this.Invoke("GetSearchEngineInfo", new object[] {
                        suppressExceptions,
                        enabledIndexesOnly});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSearchEngineInfoAsync(bool suppressExceptions, bool enabledIndexesOnly) {
            this.GetSearchEngineInfoAsync(suppressExceptions, enabledIndexesOnly, null);
        }
        
        /// <remarks/>
        public void GetSearchEngineInfoAsync(bool suppressExceptions, bool enabledIndexesOnly, object userState) {
            if ((this.GetSearchEngineInfoOperationCompleted == null)) {
                this.GetSearchEngineInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSearchEngineInfoOperationCompleted);
            }
            this.InvokeAsync("GetSearchEngineInfo", new object[] {
                        suppressExceptions,
                        enabledIndexesOnly}, this.GetSearchEngineInfoOperationCompleted, userState);
        }
        
        private void OnGetSearchEngineInfoOperationCompleted(object arg) {
            if ((this.GetSearchEngineInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSearchEngineInfoCompleted(this, new GetSearchEngineInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetDataCompletedEventHandler(object sender, GetDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetLookupTableStatsCompletedEventHandler(object sender, GetLookupTableStatsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLookupTableStatsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLookupTableStatsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetLookupTableDataSinceCompletedEventHandler(object sender, GetLookupTableDataSinceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLookupTableDataSinceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLookupTableDataSinceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetDataParameterTemplateCompletedEventHandler(object sender, GetDataParameterTemplateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataParameterTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataParameterTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ClearCacheCompletedEventHandler(object sender, ClearCacheCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ClearCacheCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ClearCacheCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void TransferOwnershipCompletedEventHandler(object sender, TransferOwnershipCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TransferOwnershipCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TransferOwnershipCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SearchCompletedEventHandler(object sender, SearchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ValidateLoginCompletedEventHandler(object sender, ValidateLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void RenameListCompletedEventHandler(object sender, RenameListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RenameListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RenameListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void RenameTabCompletedEventHandler(object sender, RenameTabCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RenameTabCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RenameTabCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetVersionCompletedEventHandler(object sender, GetVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DeleteListCompletedEventHandler(object sender, DeleteListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SaveDataSetCompletedEventHandler(object sender, SaveDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DeleteImageCompletedEventHandler(object sender, DeleteImageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DownloadImageCompletedEventHandler(object sender, DownloadImageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DownloadImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DownloadImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UploadImageCompletedEventHandler(object sender, UploadImageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetFileInfoCompletedEventHandler(object sender, GetFileInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFileInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFileInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetSearchEngineInfoCompletedEventHandler(object sender, GetSearchEngineInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSearchEngineInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSearchEngineInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591